name: Comment on PR with conflict Label

on:
  pull_request:
    types: [labeled, unlabeled, synchronize]

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - name: Comment on PR with conflict Label
        if: contains(github.event.pull_request.labels.*.name, 'conflict')
        uses: actions-cool/maintain-one-comment@v3.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            @${{ github.event.pull_request.user.login }} This PR has conflicts, please resolve them.
            <!-- ELEMENT_PLUS_CONFLICT_COMMENT -->
          body-include: '<!-- ELEMENT_PLUS_CONFLICT_COMMENT -->'
          number: ${{ github.event.pull_request.number }}
        # uses: actions/github-script@v7
        # with:
        #   script: |            
        #     const commentBodyConflict = "@${{ github.event.pull_request.user.login }} This PR has conflicts, please resolve them.";

        #     const existingComments = await github.rest.issues.listComments({
        #       owner: context.repo.owner,
        #       repo: context.repo.repo,
        #       issue_number: context.issue.number,
        #       per_page: 100, // GitHub API 限制，可能需要分页
        #     });


        #     let shouldComment = true;
        #     existingComments.data.forEach(comment => {
        #       if (comment.body.includes(commentBodyConflict)) {
        #         shouldComment = false;
        #       }
        #     });

        #     if (shouldComment) {
        #       await github.rest.issues.createComment({
        #         owner: context.repo.owner,
        #         repo: context.repo.repo,
        #         issue_number: context.issue.number,
        #         body: commentBodyConflict
        #       });
        #     }
